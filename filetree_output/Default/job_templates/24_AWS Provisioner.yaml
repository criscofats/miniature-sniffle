---
controller_templates:
  - name: "AWS Provisioner"
    description: "AWS Open Environment Provisioner"
    organization: "Default"
    project: "Ansible Workshops"
    inventory: "AWS Open Environment"
    playbook: "provisioner/provision_lab.yml"
    job_type: "run"
    fact_caching_enabled: "True"
    credentials:
      - "AWS Open Environment"
      - "Base64 Manifest"
      - "Red Hat Credential"
      - "Red Hat Offline Token"
    concurrent_jobs_enabled: "True"
    ask_scm_branch_on_launch: "False"
    ask_tags_on_launch: "False"
    ask_verbosity_on_launch: "True"
    ask_variables_on_launch: "True"
    extra_vars:
      autolicense: true
      controller_install_command: ./setup.sh -e gpgcheck=0
      create_login_page: true
      ec2_xtra:
        centos78:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 10
          disk_throughput: 125
          disk_volume_type: gp3
          filter: CentOS*7.8*x86_64
          os_type: linux
          owners: 723450883993
          python_interpreter: /usr/bin/python
          size: t2.medium
          username: centos
        centos79:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 10
          disk_throughput: 125
          disk_volume_type: gp3
          filter: CentOS*7.9*x86_64
          os_type: linux
          python_interpreter: /usr/bin/python
          size: t2.medium
          username: centos
        private_automation_hub:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 40
          disk_throughput: 125
          disk_volume_type: gp3
          filter: RHEL-8*HVM-*Hourly*
          os_type: linux
          owners: 309956199498
          size: m4.xlarge
          username: ec2-user
        rhel68:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 10
          disk_throughput: 125
          disk_volume_type: gp3
          filter: RHEL-6.8_HVM_GA*
          os_type: linux
          owners: 309956199498
          python_interpreter: /usr/bin/python
          size: t2.medium
          username: ec2-user
        rhel7:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 10
          disk_throughput: 125
          disk_volume_type: gp3
          filter: RHEL-7.9_HVM*
          os_type: linux
          owners: 309956199498
          python_interpreter: /usr/bin/python
          size: t2.medium
          username: ec2-user
        rhel8:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 10
          disk_throughput: 125
          disk_volume_type: gp3
          filter: RHEL-8*HVM-*Hourly*
          os_type: linux
          owners: 309956199498
          size: t3.micro
          username: ec2-user
        rhel8-tower:
          architecture: x86_64
          disk_iops: 3000
          disk_space: 40
          disk_throughput: 125
          disk_volume_type: gp3
          filter: RHEL-8*HVM-*Hourly*
          os_type: linux
          owners: 309956199498
          size: m4.xlarge
          username: ec2-user
        satellite:
          architecture: x86_64
          disk_iops: 4000
          disk_space: 500
          disk_throughput: 375
          disk_volume_type: gp3
          filter: Satellite 6.10*
          os_type: linux
          owners: 723450883993
          size: r5a.xlarge
          username: ec2-user
      ee_default_image: !unsafe '{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest'
      ee_images:
      - !unsafe '{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest'
      - !unsafe '{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest'
      - !unsafe '{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest'
      ee_registry_name: registry.redhat.io
      ibm_community_grid: false
      tower_node_aws_api_access: true
    execution_environment: "workshop_ee"
    survey_enabled: True
    survey_spec: {'name': '', 'description': '', 'spec': [{'question_name': 'EC2 Region', 'question_description': 'Region where the nodes will live', 'required': True, 'type': 'multiplechoice', 'variable': 'ec2_region', 'min': 0, 'max': 1024, 'default': 'us-east-1', 'choices': 'us-east-1\nus-east-2\nus-west-1\nus-west-2', 'new_question': True}, {'question_name': 'EC2 Name Prefix', 'question_description': 'Name prefix for all the VMs (No uppercase, no underscores)', 'required': True, 'type': 'text', 'variable': 'ec2_name_prefix', 'min': 1, 'max': 1024, 'default': '', 'choices': '', 'formattedChoices': [{'choice': '', 'isDefault': False, 'id': 0}], 'new_question': False}, {'question_name': 'Student total', 'question_description': 'Creates student_total of workbenches for the workshop', 'required': True, 'type': 'integer', 'variable': 'student_total', 'min': 1, 'max': 15, 'default': 1, 'choices': '', 'new_question': True}, {'question_name': 'Workshop type', 'question_description': 'Set the right workshop type (like network, rhel or f5)', 'required': True, 'type': 'multiplechoice', 'variable': 'workshop_type', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'network', 'isDefault': False, 'id': 0}, {'choice': 'rhel', 'isDefault': False, 'id': 1}, {'choice': 'rhel_90', 'isDefault': False, 'id': 2}, {'choice': 'security', 'isDefault': False, 'id': 3}, {'choice': 'smart_mgmt', 'isDefault': True, 'id': 4}, {'choice': 'windows', 'isDefault': False, 'id': 5}], 'new_question': False, 'default': 'smart_mgmt', 'choices': 'network\nrhel\nrhel_90\nsecurity\nsmart_mgmt\nwindows'}, {'question_name': 'DNS Type', 'question_description': 'Turn DNS on for control nodes, and set to type in valid_dns_type', 'required': True, 'type': 'text', 'variable': 'dns_type', 'min': 1, 'max': 1024, 'default': 'aws', 'choices': '', 'formattedChoices': [{'choice': '', 'isDefault': False, 'id': 0}], 'new_question': False}, {'question_name': 'Admin password', 'question_description': 'Password for Ansible control node', 'required': True, 'type': 'password', 'variable': 'admin_password', 'min': 1, 'max': 1024, 'default': '', 'choices': '', 'new_question': True}, {'question_name': 'Workshop DNS zone', 'question_description': 'Sets the Route53 DNS zone to use for Amazon Web Services', 'required': True, 'type': 'text', 'variable': 'workshop_dns_zone', 'min': 1, 'max': 1024, 'default': '', 'choices': '', 'formattedChoices': [{'choice': '', 'isDefault': False, 'id': 0}], 'new_question': False}, {'question_name': 'Deploy Automation Hub', 'question_description': 'Deploy a Private Automation Hub', 'required': False, 'type': 'multiplechoice', 'variable': 'automation_hub', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'true', 'isDefault': False, 'id': 0}, {'choice': 'false', 'isDefault': True, 'id': 1}], 'new_question': False, 'default': 'false', 'choices': 'true\nfalse'}, {'question_name': 'Automation Hub password', 'question_description': 'Private Automation Hub password', 'required': False, 'type': 'password', 'variable': 'automationhub_admin_password', 'min': 1, 'max': 1024, 'default': '', 'choices': '', 'new_question': True}, {'question_name': 'Install VSCode Server', 'question_description': '', 'required': True, 'type': 'multiplechoice', 'variable': 'code_server', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'true', 'isDefault': True, 'id': 0}, {'choice': 'false', 'isDefault': False, 'id': 1}], 'new_question': False, 'default': 'true', 'choices': 'true\nfalse'}, {'question_name': 'XRDP', 'question_description': '', 'required': True, 'type': 'multiplechoice', 'variable': 'xrdp', 'min': 0, 'max': 1024, 'default': 'false', 'choices': 'true\nfalse', 'new_question': True}, {'question_name': 'Controller Install', 'question_description': 'Automatically installs Tower to control node', 'required': True, 'type': 'multiplechoice', 'variable': 'controllerinstall', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'true', 'isDefault': True, 'id': 0}, {'choice': 'false', 'isDefault': False, 'id': 1}], 'new_question': False, 'default': 'true', 'choices': 'true\nfalse'}, {'question_name': 'Developer mode', 'question_description': 'Forces ansible.workshops collection to install latest edits every time', 'required': True, 'type': 'multiplechoice', 'variable': 'developer_mode', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'true', 'isDefault': True, 'id': 0}, {'choice': 'false', 'isDefault': False, 'id': 1}], 'new_question': False, 'default': 'true', 'choices': 'true\nfalse'}, {'question_name': 'Workshop or playground', 'question_description': '', 'required': True, 'type': 'multiplechoice', 'variable': 'provision_mode', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'workshop', 'isDefault': True, 'id': 0}, {'choice': 'playground', 'isDefault': False, 'id': 1}], 'new_question': False, 'default': 'workshop', 'choices': 'workshop\nplayground'}, {'question_name': 'RHEL7 or RHEL8 (required for smart_mgmt)', 'question_description': 'Select rhel7 or rhel8 client nodes', 'required': False, 'type': 'multiplechoice', 'variable': 'rhel', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'rhel7', 'isDefault': False, 'id': 0}, {'choice': 'rhel8', 'isDefault': False, 'id': 1}], 'new_question': False, 'default': '', 'choices': 'rhel7\nrhel8'}, {'question_name': 'CentOS7 Nodes (required for smart_mgmt)', 'question_description': 'Choice of centos7 nodes refer to https://wiki.centos.org/Cloud/AWS for available minor releases e.g. centos78', 'required': False, 'type': 'multiplechoice', 'variable': 'centos7', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'centos78', 'isDefault': False, 'id': 0}, {'choice': 'centos79', 'isDefault': False, 'id': 1}], 'new_question': False, 'default': '', 'choices': 'centos78\ncentos79'}, {'question_name': 'Prebuild', 'question_description': '', 'required': True, 'type': 'multiplechoice', 'variable': 'pre_build', 'min': 0, 'max': 1024, 'formattedChoices': [{'choice': 'true', 'isDefault': False, 'id': 0}, {'choice': 'false', 'isDefault': True, 'id': 1}], 'new_question': False, 'default': 'false', 'choices': 'true\nfalse'}]}
...
