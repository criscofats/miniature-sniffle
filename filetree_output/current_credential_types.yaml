---
controller_credential_types:
  - name: "Ansible Workshop Credentials"
    description: "Credentials needed for AWS Open Environment Ansible workshops"
    kind: "cloud"
    inputs:
      fields:
      - id: offline_token
        label: Red Hat Offline Token
        secret: true
        type: string
      - id: redhat_username
        label: Red Hat Username
        secret: false
        type: string
      - id: redhat_password
        label: Red Hat Password
        secret: true
        type: string
      - id: base64_manifest
        label: Base64 Manifest
        secret: true
        type: string
      required:
      - offline_token
      - redhat_username
      - redhat_password
      - base64_manifest

    injectors:
      extra_vars:
        base64_manifest: !unsafe '{{ base64_manifest}}'
        offline_token: !unsafe '{{ offline_token }}'
        redhat_password: !unsafe '{{ redhat_password }}'
        redhat_username: !unsafe '{{ redhat_username }}'
  - name: "Automation Hub API Token"
    description: "Token from console.redhat.com"
    kind: "cloud"
    inputs:
      fields:
      - id: ah_api_token
        label: Automation Hub API Token
        secret: true
        type: string
      required:
      - ah_api_token

    injectors:
      extra_vars:
        offline_token: !unsafe '{{ ah_api_token }}'
  - name: "Base64 Manifest"
    description: ""
    kind: "cloud"
    inputs:
      fields:
      - id: base64_manifest
        label: Base64 Manifest
        secret: true
        type: string
      required:
      - base64_manifest

    injectors:
      extra_vars:
        base64_manifest: !unsafe '{{ base64_manifest }}'
  - name: "Configuration as Code"
    description: "Credential to export CaC"
    kind: "cloud"
    inputs:
      fields:
      - id: controller_username
        label: Ansible Automation Controller Username
        secret: false
        type: string
      - id: controller_password
        label: Ansible Automation Controller Password
        secret: true
        type: string
      required:
      - controller_username
      - controller_password

    injectors:
      extra_vars:
        controller_password: !unsafe '{{ controller_password }}'
        controller_username: !unsafe '{{ controller_username }}'
  - name: "Linux Credentials"
    description: "All Linux host credentials"
    kind: "cloud"
    inputs:
      fields:
      - id: rpmusername
        label: RPM Username
        secret: true
        type: string
      - id: rpmpassword
        label: RPM Password
        secret: true
        type: string
      - id: debusername
        label: Debian Username
        secret: true
        type: string
      - id: debpassword
        label: Debian Password
        secret: true
        type: string
      - id: rpmsudouser
        label: RPM Sudo Username
        secret: true
        type: string
      - id: rpmsudopw
        label: RPM Sudo Password
        secret: true
        type: string
      - id: debsudouser
        label: Debian Sudo Username
        secret: true
        type: string
      - id: debsudopw
        label: Debian Sudo Password
        secret: true
        type: string
      required:
      - rpmusername
      - rpmpassword
      - debusername
      - debpassword

    injectors:
      extra_vars:
        debpassword: !unsafe '{{ debpassword }}'
        debsudopw: !unsafe '{{ debsudopw }}'
        debsudouser: !unsafe '{{ debsudouser }}'
        debusername: !unsafe '{{ debusername }}'
        rpmpassword: !unsafe '{{ rpmpassword }}'
        rpmsudopw: !unsafe '{{ rpmsudopw }}'
        rpmsudouser: !unsafe '{{ rpmsudouser }}'
        rpmusername: !unsafe '{{ rpmusername }}'
  - name: "Red Hat Credential"
    description: "Credential for access.redhat.com and image registry"
    kind: "cloud"
    inputs:
      fields:
      - id: redhat_username
        label: Red Hat Username
        secret: false
        type: string
      - id: redhat_password
        label: Red Hat Password
        secret: true
        type: string
      required:
      - redhat_username
      - redhat_password

    injectors:
      extra_vars:
        redhat_password: !unsafe '{{ redhat_password }}'
        redhat_username: !unsafe '{{ redhat_username }}'
  - name: "Red Hat Offline Token"
    description: "Red Hat offline token from https://access.redhat.com/management/api"
    kind: "cloud"
    inputs:
      fields:
      - id: offline_token
        label: Red Hat Offline Token
        secret: true
        type: string
      required:
      - offline_token

    injectors:
      extra_vars:
        offline_token: !unsafe '{{ offline_token }}'
...
