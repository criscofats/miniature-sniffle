{
     "users": [
          {
               "username": "admin",
               "first_name": "",
               "last_name": "",
               "email": "admin@example.com",
               "is_superuser": true,
               "is_system_auditor": false,
               "related": {
                    "roles": [
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Ping",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Check Linux Updates",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "AWS Provisioner",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "AWS Teardown",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "AWS Resources",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Pub AWS Provisioner",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Pub AWS Teardown",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Pub AWS Provisioner survey testing",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Pub AWS Teardown survey testing",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "AMI Permissions",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Apply Linux update",
                                   "type": "job_template"
                              }
                         },
                         {
                              "name": "Admin",
                              "type": "role",
                              "content_object": {
                                   "organization": null,
                                   "name": "Demo Credential",
                                   "credential_type": {
                                        "name": "Machine",
                                        "kind": "ssh",
                                        "type": "credential_type"
                                   },
                                   "type": "credential"
                              }
                         },
                         {
                              "name": "System Administrator",
                              "type": "role"
                         }
                    ]
               },
               "natural_key": {
                    "username": "admin",
                    "type": "user"
               }
          },
          {
               "username": "test",
               "first_name": "test",
               "last_name": "",
               "email": "",
               "is_superuser": false,
               "is_system_auditor": false,
               "related": {
                    "roles": [
                         {
                              "name": "Member",
                              "type": "role",
                              "content_object": {
                                   "name": "Default",
                                   "type": "organization"
                              }
                         }
                    ]
               },
               "natural_key": {
                    "username": "test",
                    "type": "user"
               }
          }
     ],
     "organizations": [
          {
               "name": "Default",
               "description": "",
               "max_hosts": 0,
               "default_environment": null,
               "related": {
                    "execution_environments": [],
                    "notification_templates": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "notification_templates_approvals": [],
                    "galaxy_credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Automation Hub rh-certified",
                              "credential_type": {
                                   "name": "Ansible Galaxy/Automation Hub API Token",
                                   "kind": "galaxy",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Automation Hub Console",
                              "credential_type": {
                                   "name": "Ansible Galaxy/Automation Hub API Token",
                                   "kind": "galaxy",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Automation Hub galaxy",
                              "credential_type": {
                                   "name": "Ansible Galaxy/Automation Hub API Token",
                                   "kind": "galaxy",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": null,
                              "name": "Ansible Galaxy",
                              "credential_type": {
                                   "name": "Ansible Galaxy/Automation Hub API Token",
                                   "kind": "galaxy",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ]
               },
               "natural_key": {
                    "name": "Default",
                    "type": "organization"
               }
          }
     ],
     "teams": [],
     "credential_types": [
          {
               "name": "Ansible Workshop Credentials",
               "description": "Credentials needed for AWS Open Environment Ansible workshops",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "offline_token",
                              "type": "string",
                              "label": "Red Hat Offline Token",
                              "secret": true
                         },
                         {
                              "id": "redhat_username",
                              "type": "string",
                              "label": "Red Hat Username",
                              "secret": false
                         },
                         {
                              "id": "redhat_password",
                              "type": "string",
                              "label": "Red Hat Password",
                              "secret": true
                         },
                         {
                              "id": "base64_manifest",
                              "type": "string",
                              "label": "Base64 Manifest",
                              "secret": true
                         }
                    ],
                    "required": [
                         "offline_token",
                         "redhat_username",
                         "redhat_password",
                         "base64_manifest"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "offline_token": "{{ offline_token }}",
                         "base64_manifest": "{{ base64_manifest}}",
                         "redhat_password": "{{ redhat_password }}",
                         "redhat_username": "{{ redhat_username }}"
                    }
               },
               "natural_key": {
                    "name": "Ansible Workshop Credentials",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Automation Hub API Token",
               "description": "Token from console.redhat.com",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "ah_api_token",
                              "type": "string",
                              "label": "Automation Hub API Token",
                              "secret": true
                         }
                    ],
                    "required": [
                         "ah_api_token"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "offline_token": "{{ ah_api_token }}"
                    }
               },
               "natural_key": {
                    "name": "Automation Hub API Token",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Base64 Manifest",
               "description": "",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "base64_manifest",
                              "type": "string",
                              "label": "Base64 Manifest",
                              "secret": true
                         }
                    ],
                    "required": [
                         "base64_manifest"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "base64_manifest": "{{ base64_manifest }}"
                    }
               },
               "natural_key": {
                    "name": "Base64 Manifest",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Configuration as Code",
               "description": "Credential to export CaC",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "controller_username",
                              "type": "string",
                              "label": "Ansible Automation Controller Username",
                              "secret": false
                         },
                         {
                              "id": "controller_password",
                              "type": "string",
                              "label": "Ansible Automation Controller Password",
                              "secret": true
                         }
                    ],
                    "required": [
                         "controller_username",
                         "controller_password"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "controller_password": "{{ controller_password }}",
                         "controller_username": "{{ controller_username }}"
                    }
               },
               "natural_key": {
                    "name": "Configuration as Code",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Linux Credentials",
               "description": "All Linux host credentials",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "rpmusername",
                              "type": "string",
                              "label": "RPM Username",
                              "secret": true
                         },
                         {
                              "id": "rpmpassword",
                              "type": "string",
                              "label": "RPM Password",
                              "secret": true
                         },
                         {
                              "id": "debusername",
                              "type": "string",
                              "label": "Debian Username",
                              "secret": true
                         },
                         {
                              "id": "debpassword",
                              "type": "string",
                              "label": "Debian Password",
                              "secret": true
                         },
                         {
                              "id": "rpmsudouser",
                              "type": "string",
                              "label": "RPM Sudo Username",
                              "secret": true
                         },
                         {
                              "id": "rpmsudopw",
                              "type": "string",
                              "label": "RPM Sudo Password",
                              "secret": true
                         },
                         {
                              "id": "debsudouser",
                              "type": "string",
                              "label": "Debian Sudo Username",
                              "secret": true
                         },
                         {
                              "id": "debsudopw",
                              "type": "string",
                              "label": "Debian Sudo Password",
                              "secret": true
                         }
                    ],
                    "required": [
                         "rpmusername",
                         "rpmpassword",
                         "debusername",
                         "debpassword"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "debsudopw": "{{ debsudopw }}",
                         "rpmsudopw": "{{ rpmsudopw }}",
                         "debpassword": "{{ debpassword }}",
                         "debsudouser": "{{ debsudouser }}",
                         "debusername": "{{ debusername }}",
                         "rpmpassword": "{{ rpmpassword }}",
                         "rpmsudouser": "{{ rpmsudouser }}",
                         "rpmusername": "{{ rpmusername }}"
                    }
               },
               "natural_key": {
                    "name": "Linux Credentials",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Red Hat Credential",
               "description": "Credential for access.redhat.com and image registry",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "redhat_username",
                              "type": "string",
                              "label": "Red Hat Username",
                              "secret": false
                         },
                         {
                              "id": "redhat_password",
                              "type": "string",
                              "label": "Red Hat Password",
                              "secret": true
                         }
                    ],
                    "required": [
                         "redhat_username",
                         "redhat_password"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "redhat_password": "{{ redhat_password }}",
                         "redhat_username": "{{ redhat_username }}"
                    }
               },
               "natural_key": {
                    "name": "Red Hat Credential",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          },
          {
               "name": "Red Hat Offline Token",
               "description": "Red Hat offline token from https://access.redhat.com/management/api",
               "kind": "cloud",
               "inputs": {
                    "fields": [
                         {
                              "id": "offline_token",
                              "type": "string",
                              "label": "Red Hat Offline Token",
                              "secret": true
                         }
                    ],
                    "required": [
                         "offline_token"
                    ]
               },
               "injectors": {
                    "extra_vars": {
                         "offline_token": "{{ offline_token }}"
                    }
               },
               "natural_key": {
                    "name": "Red Hat Offline Token",
                    "kind": "cloud",
                    "type": "credential_type"
               }
          }
     ],
     "credentials": [
          {
               "name": "Ansible Galaxy",
               "description": "",
               "inputs": {
                    "url": "https://galaxy.ansible.com/"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ansible Galaxy",
                    "credential_type": {
                         "name": "Ansible Galaxy/Automation Hub API Token",
                         "kind": "galaxy",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Ansible Workshop Credentials",
               "description": "",
               "inputs": {
                    "offline_token": "",
                    "redhat_password": "",
                    "redhat_username": "rh-ee-cmcaskil"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Workshop Credentials",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ansible Workshop Credentials",
                    "credential_type": {
                         "name": "Ansible Workshop Credentials",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub API Token",
               "description": "",
               "inputs": {
                    "ah_api_token": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Automation Hub API Token",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub API Token",
                    "credential_type": {
                         "name": "Automation Hub API Token",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub Community",
               "description": "",
               "inputs": {
                    "url": "https://automationhub.hyperv.corvus.local/api/galaxy/content/community/",
                    "auth_url": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub Community",
                    "credential_type": {
                         "name": "Ansible Galaxy/Automation Hub API Token",
                         "kind": "galaxy",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub Console",
               "description": "",
               "inputs": {
                    "url": "https://console.redhat.com/api/automation-hub/content/10856009-synclist/",
                    "token": "",
                    "auth_url": "https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub Console",
                    "credential_type": {
                         "name": "Ansible Galaxy/Automation Hub API Token",
                         "kind": "galaxy",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub Container Registry",
               "description": "",
               "organization": null,
               "inputs": {
                    "host": "automationhub.hyperv.corvus.local",
                    "password": "",
                    "username": "admin",
                    "verify_ssl": true
               },
               "credential_type": {
                    "name": "Container Registry",
                    "kind": "registry",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": null,
                    "name": "Automation Hub Container Registry",
                    "credential_type": {
                         "name": "Container Registry",
                         "kind": "registry",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub Container Registry",
               "description": "",
               "inputs": {
                    "host": "automationhub.hyperv.corvus.local",
                    "password": "",
                    "username": "admin",
                    "verify_ssl": false
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Container Registry",
                    "kind": "registry",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub Container Registry",
                    "credential_type": {
                         "name": "Container Registry",
                         "kind": "registry",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub galaxy",
               "description": "",
               "inputs": {
                    "url": "https://automationhub.hyperv.corvus.local/api/galaxy/content/community/",
                    "token": "",
                    "auth_url": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub galaxy",
                    "credential_type": {
                         "name": "Ansible Galaxy/Automation Hub API Token",
                         "kind": "galaxy",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub Published",
               "description": "",
               "inputs": {
                    "url": "https://automationhub.hyperv.corvus.local/api/galaxy/content/published/",
                    "auth_url": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub Published",
                    "credential_type": {
                         "name": "Ansible Galaxy/Automation Hub API Token",
                         "kind": "galaxy",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Automation Hub rh-certified",
               "description": "",
               "inputs": {
                    "url": "https://automationhub.hyperv.corvus.local/api/galaxy/content/rh-certified/",
                    "token": "",
                    "auth_url": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Ansible Galaxy/Automation Hub API Token",
                    "kind": "galaxy",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Automation Hub rh-certified",
                    "credential_type": {
                         "name": "Ansible Galaxy/Automation Hub API Token",
                         "kind": "galaxy",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "AWS Open Environment",
               "description": "",
               "inputs": {
                    "password": "",
                    "username": "ABCDEFGHIJKLMNO123456"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Amazon Web Services",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "credential_type": {
                         "name": "Amazon Web Services",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "AWS Personal Environment",
               "description": "",
               "inputs": {
                    "password": "",
                    "username": "AKIA2Q4IIN6MUT33JGX3"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Amazon Web Services",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Personal Environment",
                    "credential_type": {
                         "name": "Amazon Web Services",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Base64 Manifest",
               "description": "",
               "inputs": {},
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Base64 Manifest",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Base64 Manifest",
                    "credential_type": {
                         "name": "Base64 Manifest",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Configuration as Code Credential",
               "description": "",
               "inputs": {
                    "controller_password": "",
                    "controller_username": "admin"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Configuration as Code",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Configuration as Code Credential",
                    "credential_type": {
                         "name": "Configuration as Code",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Default Execution Environment Registry Credential",
               "description": "",
               "inputs": {
                    "host": "quay.io",
                    "username": "cmcaskil@redhat.com",
                    "verify_ssl": true
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Container Registry",
                    "kind": "registry",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Default Execution Environment Registry Credential",
                    "credential_type": {
                         "name": "Container Registry",
                         "kind": "registry",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Demo Credential",
               "description": "",
               "organization": null,
               "inputs": {
                    "username": "admin"
               },
               "credential_type": {
                    "name": "Machine",
                    "kind": "ssh",
                    "type": "credential_type"
               },
               "user": {
                    "username": "admin",
                    "type": "user"
               },
               "natural_key": {
                    "organization": null,
                    "name": "Demo Credential",
                    "credential_type": {
                         "name": "Machine",
                         "kind": "ssh",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "GitHub",
               "description": "",
               "inputs": {
                    "password": "",
                    "username": "criscofats",
                    "ssh_key_data": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Source Control",
                    "kind": "scm",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "GitHub",
                    "credential_type": {
                         "name": "Source Control",
                         "kind": "scm",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Insights",
               "description": "Red Hat Insights",
               "inputs": {
                    "password": "",
                    "username": "cmcaskill"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Insights",
                    "kind": "insights",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Insights",
                    "credential_type": {
                         "name": "Insights",
                         "kind": "insights",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Linux",
               "description": "",
               "inputs": {
                    "password": "",
                    "username": "cmcaskil",
                    "become_method": "sudo",
                    "become_password": "",
                    "become_username": "root"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Machine",
                    "kind": "ssh",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Linux",
                    "credential_type": {
                         "name": "Machine",
                         "kind": "ssh",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Linux Credentials",
               "description": "",
               "inputs": {},
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Linux Credentials",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Linux Credentials",
                    "credential_type": {
                         "name": "Linux Credentials",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Personal Offline Token",
               "description": "",
               "inputs": {
                    "offline_token": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Red Hat Offline Token",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Personal Offline Token",
                    "credential_type": {
                         "name": "Red Hat Offline Token",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Personal Red Hat Credentials",
               "description": "",
               "inputs": {
                    "redhat_password": "",
                    "redhat_username": "cmcaskill"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Red Hat Credential",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Personal Red Hat Credentials",
                    "credential_type": {
                         "name": "Red Hat Credential",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Red Hat Credential",
               "description": "",
               "inputs": {
                    "redhat_password": "",
                    "redhat_username": "rh-ee-cmcaskil"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Red Hat Credential",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Red Hat Credential",
                    "credential_type": {
                         "name": "Red Hat Credential",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Red Hat Offline Token",
               "description": "",
               "inputs": {
                    "offline_token": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Red Hat Offline Token",
                    "kind": "cloud",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Red Hat Offline Token",
                    "credential_type": {
                         "name": "Red Hat Offline Token",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "RPi",
               "description": "Raspberry Pi",
               "inputs": {
                    "password": "",
                    "username": "pi",
                    "become_method": "sudo",
                    "become_password": "",
                    "become_username": "pi"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Machine",
                    "kind": "ssh",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "RPi",
                    "credential_type": {
                         "name": "Machine",
                         "kind": "ssh",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          },
          {
               "name": "Windows",
               "description": "Windows Credential",
               "inputs": {
                    "username": "CROW\\codym",
                    "become_method": "",
                    "become_username": ""
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "credential_type": {
                    "name": "Machine",
                    "kind": "ssh",
                    "type": "credential_type"
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Windows",
                    "credential_type": {
                         "name": "Machine",
                         "kind": "ssh",
                         "type": "credential_type"
                    },
                    "type": "credential"
               }
          }
     ],
     "notification_templates": [],
     "projects": [
          {
               "name": "Demo Project",
               "description": "",
               "local_path": "_6__demo_project",
               "scm_type": "git",
               "scm_url": "https://github.com/ansible/ansible-tower-samples",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "credential": null,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": false,
               "default_environment": null,
               "signature_validation_credential": null,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Demo Project",
                    "type": "project"
               }
          },
          {
               "name": "Home Lab",
               "description": "Experimental home lab playbooks",
               "local_path": "_10__home_lab",
               "scm_type": "git",
               "scm_url": "git@github.com:criscofats/friendly-invention.git",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": true,
               "default_environment": null,
               "signature_validation_credential": null,
               "credential": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "GitHub",
                    "credential_type": {
                         "name": "Source Control",
                         "kind": "scm",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               }
          },
          {
               "name": "Red Hat Insights Project",
               "description": "",
               "local_path": "_11__red_hat_insights_project",
               "scm_type": "insights",
               "scm_url": "https://cloud.redhat.com",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": false,
               "default_environment": null,
               "signature_validation_credential": null,
               "credential": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Insights",
                    "credential_type": {
                         "name": "Insights",
                         "kind": "insights",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Red Hat Insights Project",
                    "type": "project"
               }
          },
          {
               "name": "Product Demos",
               "description": "Will's RedHatGov Product Demos",
               "local_path": "_12__product_demos",
               "scm_type": "git",
               "scm_url": "https://github.com/criscofats/product-demos.git",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "credential": null,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": false,
               "default_environment": null,
               "signature_validation_credential": null,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Product Demos",
                    "type": "project"
               }
          },
          {
               "name": "Ansible Workshops",
               "description": "ideal-robot repo for private workshop changes",
               "local_path": "_13__ansible_workshops",
               "scm_type": "git",
               "scm_url": "git@github.com:criscofats/ideal-robot.git",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": true,
               "default_environment": null,
               "signature_validation_credential": null,
               "credential": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "GitHub",
                    "credential_type": {
                         "name": "Source Control",
                         "kind": "scm",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ansible Workshops",
                    "type": "project"
               }
          },
          {
               "name": "packer-ansible-ec2",
               "description": "Automated image builds for AWS EC2",
               "local_path": "_14__packer_ansible_ec2",
               "scm_type": "git",
               "scm_url": "https://github.com/criscofats/packer-ansible-ec2.git",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "credential": null,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": true,
               "default_environment": null,
               "signature_validation_credential": null,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "packer-ansible-ec2",
                    "type": "project"
               }
          },
          {
               "name": "Public Ansible Workshops",
               "description": "",
               "local_path": "_15__public_ansible_workshops",
               "scm_type": "git",
               "scm_url": "https://github.com/criscofats/workshops.git",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "credential": null,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": true,
               "default_environment": null,
               "signature_validation_credential": null,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Public Ansible Workshops",
                    "type": "project"
               }
          },
          {
               "name": "Configuration as Code",
               "description": "super-bassoon",
               "local_path": "_16__configuration_as_code",
               "scm_type": "git",
               "scm_url": "https://github.com/criscofats/super-bassoon.git",
               "scm_branch": "",
               "scm_refspec": "",
               "scm_clean": false,
               "scm_track_submodules": false,
               "scm_delete_on_update": false,
               "timeout": 0,
               "scm_update_on_launch": false,
               "scm_update_cache_timeout": 0,
               "allow_override": false,
               "default_environment": null,
               "signature_validation_credential": null,
               "credential": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "GitHub",
                    "credential_type": {
                         "name": "Source Control",
                         "kind": "scm",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Configuration as Code",
                    "type": "project"
               }
          }
     ],
     "inventory": [
          {
               "name": "AWS Open Environment",
               "description": "AWS EC2 dynamic inventory",
               "kind": "",
               "host_filter": null,
               "variables": "",
               "prevent_instance_group_fallback": false,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "hosts": [],
                    "groups": [],
                    "labels": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               }
          },
          {
               "name": "Demo Inventory",
               "description": "",
               "kind": "",
               "host_filter": null,
               "variables": "",
               "prevent_instance_group_fallback": false,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "hosts": [
                         {
                              "name": "localhost",
                              "description": "",
                              "enabled": true,
                              "instance_id": "",
                              "variables": "ansible_connection: local\nansible_python_interpreter: '{{ ansible_playbook_python }}'",
                              "inventory": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Demo Inventory",
                                   "type": "inventory"
                              },
                              "related": {
                                   "groups": []
                              },
                              "natural_key": {
                                   "name": "localhost",
                                   "inventory": {
                                        "organization": {
                                             "name": "Default",
                                             "type": "organization"
                                        },
                                        "name": "Demo Inventory",
                                        "type": "inventory"
                                   },
                                   "type": "host"
                              }
                         }
                    ],
                    "groups": [],
                    "labels": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Demo Inventory",
                    "type": "inventory"
               }
          },
          {
               "name": "Home Inventory",
               "description": "",
               "kind": "",
               "host_filter": null,
               "variables": "",
               "prevent_instance_group_fallback": false,
               "organization": {
                    "name": "Default",
                    "type": "organization"
               },
               "related": {
                    "hosts": [
                         {
                              "name": "automationhub",
                              "description": "imported",
                              "enabled": true,
                              "instance_id": "9762dd91-5353-470a-b3d6-7ef9d4b010a9",
                              "variables": "{\"ansible_host\": \"automationhub\", \"insights_account\": \"10856009\", \"insights_ansible_host\": null, \"insights_bios_uuid\": \"a806b9bf-b02c-7e40-bd24-5be2d4004da4\", \"insights_created\": \"2023-04-25T15:34:01.111727+00:00\", \"insights_culled_timestamp\": \"2023-05-12T14:30:43.338555+00:00\", \"insights_display_name\": \"automationhub\", \"insights_facts\": [{\"facts\": {\"ARCHITECTURE\": \"x86_64\", \"IS_VIRTUAL\": true, \"MEMORY\": 8, \"RH_PROD\": [\"479\"], \"SYNC_TIMESTAMP\": \"2023-04-27T00:33:31.204833912Z\", \"orgId\": \"16317861\"}, \"namespace\": \"rhsm\"}], \"insights_fqdn\": \"automationhub\", \"insights_id\": \"9762dd91-5353-470a-b3d6-7ef9d4b010a9\", \"insights_insights_id\": \"3e5d60e1-136d-49d8-9784-4fe32f357ca4\", \"insights_ip_addresses\": [\"192.168.1.98\"], \"insights_mac_addresses\": [\"00:15:5d:01:02:0a\", \"00:00:00:00:00:00\"], \"insights_org_id\": \"16317861\", \"insights_per_reporter_staleness\": {\"puptoo\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-27T09:30:43.526153+00:00\", \"stale_timestamp\": \"2023-04-28T14:30:43.338555+00:00\"}, \"rhsm-conduit\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-27T01:49:12.337822+00:00\", \"stale_timestamp\": \"2023-04-29T00:33:31.204833+00:00\"}}, \"insights_provider_id\": null, \"insights_provider_type\": null, \"insights_reporter\": \"puptoo\", \"insights_satellite_id\": null, \"insights_stale_timestamp\": \"2023-04-28T14:30:43.338555+00:00\", \"insights_stale_warning_timestamp\": \"2023-05-05T14:30:43.338555+00:00\", \"insights_subscription_manager_id\": \"0bd7d8ea-b280-4232-8bb0-59769ce3e379\", \"insights_updated\": \"2023-04-27T09:30:43.526470+00:00\"}",
                              "inventory": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Home Inventory",
                                   "type": "inventory"
                              },
                              "related": {
                                   "groups": []
                              },
                              "natural_key": {
                                   "name": "automationhub",
                                   "inventory": {
                                        "organization": {
                                             "name": "Default",
                                             "type": "organization"
                                        },
                                        "name": "Home Inventory",
                                        "type": "inventory"
                                   },
                                   "type": "host"
                              }
                         },
                         {
                              "name": "controller",
                              "description": "imported",
                              "enabled": true,
                              "instance_id": "1b2f6d6b-79df-4ad2-be6d-5a8fc848ead6",
                              "variables": "{\"ansible_host\": \"controller\", \"insights_account\": \"10856009\", \"insights_ansible_host\": null, \"insights_bios_uuid\": \"010f3e13-1ec1-43d8-a89f-2e684db8b88a\", \"insights_created\": \"2023-04-25T15:35:04.022592+00:00\", \"insights_culled_timestamp\": \"2023-05-12T15:03:46.443530+00:00\", \"insights_display_name\": \"controller\", \"insights_facts\": [{\"facts\": {\"ARCHITECTURE\": \"x86_64\", \"IS_VIRTUAL\": true, \"MEMORY\": 8, \"RH_PROD\": [\"479\"], \"SYNC_TIMESTAMP\": \"2023-04-27T00:33:31.204576754Z\", \"orgId\": \"16317861\"}, \"namespace\": \"rhsm\"}], \"insights_fqdn\": \"controller\", \"insights_id\": \"1b2f6d6b-79df-4ad2-be6d-5a8fc848ead6\", \"insights_insights_id\": \"b86bf144-8c25-439c-b5d8-c1491867c6bc\", \"insights_ip_addresses\": [\"192.168.1.101\"], \"insights_mac_addresses\": [\"00:15:5d:01:02:0d\", \"00:00:00:00:00:00\"], \"insights_org_id\": \"16317861\", \"insights_per_reporter_staleness\": {\"puptoo\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-27T10:03:46.604970+00:00\", \"stale_timestamp\": \"2023-04-28T15:03:46.443530+00:00\"}, \"rhsm-conduit\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-27T01:49:04.394551+00:00\", \"stale_timestamp\": \"2023-04-29T00:33:31.204576+00:00\"}}, \"insights_provider_id\": null, \"insights_provider_type\": null, \"insights_reporter\": \"puptoo\", \"insights_satellite_id\": null, \"insights_stale_timestamp\": \"2023-04-28T15:03:46.443530+00:00\", \"insights_stale_warning_timestamp\": \"2023-05-05T15:03:46.443530+00:00\", \"insights_subscription_manager_id\": \"4cd5fad1-4650-4bbe-829e-6d603df84c12\", \"insights_updated\": \"2023-04-27T10:03:46.605258+00:00\"}",
                              "inventory": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Home Inventory",
                                   "type": "inventory"
                              },
                              "related": {
                                   "groups": []
                              },
                              "natural_key": {
                                   "name": "controller",
                                   "inventory": {
                                        "organization": {
                                             "name": "Default",
                                             "type": "organization"
                                        },
                                        "name": "Home Inventory",
                                        "type": "inventory"
                                   },
                                   "type": "host"
                              }
                         },
                         {
                              "name": "magpie",
                              "description": "imported",
                              "enabled": true,
                              "instance_id": "58a08358-1c03-4416-b10e-3a4f4c014437",
                              "variables": "{\"ansible_host\": \"magpie\", \"insights_account\": \"10856009\", \"insights_ansible_host\": null, \"insights_bios_uuid\": \"142260cc-259b-11b2-a85c-ecbae4d25b7b\", \"insights_created\": \"2023-03-11T02:17:03.154378+00:00\", \"insights_culled_timestamp\": \"2023-05-12T18:56:59.278711+00:00\", \"insights_display_name\": \"magpie\", \"insights_facts\": [{\"facts\": {\"ARCHITECTURE\": \"x86_64\", \"IS_VIRTUAL\": false, \"MEMORY\": 31, \"RH_PROD\": [\"480\", \"479\"], \"SYNC_TIMESTAMP\": \"2023-04-27T00:33:31.205027488Z\", \"orgId\": \"16317861\"}, \"namespace\": \"rhsm\"}], \"insights_fqdn\": \"magpie\", \"insights_id\": \"58a08358-1c03-4416-b10e-3a4f4c014437\", \"insights_insights_id\": \"fb300c94-6677-43d4-abf5-b696a5dc82bb\", \"insights_ip_addresses\": [\"192.168.1.148\", \"192.168.1.7\"], \"insights_mac_addresses\": [\"08:3a:88:5f:79:14\", \"00:00:00:00:00:00\", \"f0:77:c3:94:04:3a\"], \"insights_org_id\": \"16317861\", \"insights_per_reporter_staleness\": {\"puptoo\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-27T13:56:59.508454+00:00\", \"stale_timestamp\": \"2023-04-28T18:56:59.278711+00:00\"}, \"rhsm-conduit\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-27T01:12:15.804528+00:00\", \"stale_timestamp\": \"2023-04-29T00:33:31.205027+00:00\"}}, \"insights_provider_id\": null, \"insights_provider_type\": null, \"insights_reporter\": \"puptoo\", \"insights_satellite_id\": null, \"insights_stale_timestamp\": \"2023-04-28T18:56:59.278711+00:00\", \"insights_stale_warning_timestamp\": \"2023-05-05T18:56:59.278711+00:00\", \"insights_subscription_manager_id\": \"a798e993-8c09-4cdc-8125-b39332b49686\", \"insights_updated\": \"2023-04-27T13:56:59.508727+00:00\"}",
                              "inventory": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Home Inventory",
                                   "type": "inventory"
                              },
                              "related": {
                                   "groups": []
                              },
                              "natural_key": {
                                   "name": "magpie",
                                   "inventory": {
                                        "organization": {
                                             "name": "Default",
                                             "type": "organization"
                                        },
                                        "name": "Home Inventory",
                                        "type": "inventory"
                                   },
                                   "type": "host"
                              }
                         },
                         {
                              "name": "rhel7",
                              "description": "imported",
                              "enabled": true,
                              "instance_id": "c501358a-2f33-4395-b679-b0d1545708c9",
                              "variables": "{\"ansible_host\": \"rhel7\", \"insights_account\": \"10856009\", \"insights_ansible_host\": null, \"insights_bios_uuid\": \"ff28fccc-ed29-904f-a876-7c5a024b737c\", \"insights_created\": \"2023-03-10T00:48:31.139938+00:00\", \"insights_culled_timestamp\": \"2023-05-06T00:50:11.397103+00:00\", \"insights_display_name\": \"rhel7\", \"insights_facts\": [{\"facts\": {\"ARCHITECTURE\": \"x86_64\", \"IS_VIRTUAL\": true, \"MEMORY\": 5, \"RH_PROD\": [\"69\"], \"SYNC_TIMESTAMP\": \"2023-04-20T00:50:11.397103888Z\", \"orgId\": \"16317861\"}, \"namespace\": \"rhsm\"}], \"insights_fqdn\": \"rhel7\", \"insights_id\": \"c501358a-2f33-4395-b679-b0d1545708c9\", \"insights_insights_id\": \"74450d0e-b3c9-469d-9075-16350e1f6faf\", \"insights_ip_addresses\": [\"fe80::8064:16c2:8c59:cf17\", \"192.168.122.1\", \"192.168.1.100\", \"127.0.0.1\"], \"insights_mac_addresses\": [\"00:15:5d:01:02:09\", \"52:54:00:ef:0c:aa\"], \"insights_org_id\": \"16317861\", \"insights_per_reporter_staleness\": {\"puptoo\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-19T10:15:27.211473+00:00\", \"stale_timestamp\": \"2023-04-20T15:15:26.924594+00:00\"}, \"rhsm-conduit\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-20T02:36:20.740580+00:00\", \"stale_timestamp\": \"2023-04-22T00:50:11.397103+00:00\"}}, \"insights_provider_id\": null, \"insights_provider_type\": null, \"insights_reporter\": \"rhsm-conduit\", \"insights_satellite_id\": null, \"insights_stale_timestamp\": \"2023-04-22T00:50:11.397103+00:00\", \"insights_stale_warning_timestamp\": \"2023-04-29T00:50:11.397103+00:00\", \"insights_subscription_manager_id\": \"15381c03-7746-4ce3-aef9-8e608c077232\", \"insights_updated\": \"2023-04-20T02:36:20.740909+00:00\"}",
                              "inventory": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Home Inventory",
                                   "type": "inventory"
                              },
                              "related": {
                                   "groups": []
                              },
                              "natural_key": {
                                   "name": "rhel7",
                                   "inventory": {
                                        "organization": {
                                             "name": "Default",
                                             "type": "organization"
                                        },
                                        "name": "Home Inventory",
                                        "type": "inventory"
                                   },
                                   "type": "host"
                              }
                         },
                         {
                              "name": "rhel9",
                              "description": "imported",
                              "enabled": true,
                              "instance_id": "9b1c43ed-9186-4899-af60-a730c28eecff",
                              "variables": "{\"ansible_host\": \"rhel9\", \"insights_account\": \"10856009\", \"insights_ansible_host\": null, \"insights_bios_uuid\": \"9dff13e9-8ca4-c441-9ba0-59ebdee8814a\", \"insights_created\": \"2022-11-11T17:39:10.752177+00:00\", \"insights_culled_timestamp\": \"2023-05-06T00:50:11.397909+00:00\", \"insights_display_name\": \"rhel9\", \"insights_facts\": [{\"facts\": {\"ARCHITECTURE\": \"x86_64\", \"IS_VIRTUAL\": true, \"MEMORY\": 3, \"RH_PROD\": [\"479\"], \"SYNC_TIMESTAMP\": \"2023-04-20T00:50:11.397909349Z\", \"orgId\": \"16317861\"}, \"namespace\": \"rhsm\"}], \"insights_fqdn\": \"rhel9\", \"insights_id\": \"9b1c43ed-9186-4899-af60-a730c28eecff\", \"insights_insights_id\": \"c046901a-6428-4172-9d21-bbc6cd3376e8\", \"insights_ip_addresses\": [\"192.168.1.96\", \"fe80::215:5dff:fe01:208\", \"127.0.0.1\"], \"insights_mac_addresses\": [\"00:15:5d:01:02:08\"], \"insights_org_id\": \"16317861\", \"insights_per_reporter_staleness\": {\"puptoo\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-03-22T20:08:02.146361+00:00\", \"stale_timestamp\": \"2023-03-24T01:08:01.585157+00:00\"}, \"rhsm-conduit\": {\"check_in_succeeded\": true, \"last_check_in\": \"2023-04-20T01:45:16.304766+00:00\", \"stale_timestamp\": \"2023-04-22T00:50:11.397909+00:00\"}}, \"insights_provider_id\": null, \"insights_provider_type\": null, \"insights_reporter\": \"rhsm-conduit\", \"insights_satellite_id\": null, \"insights_stale_timestamp\": \"2023-04-22T00:50:11.397909+00:00\", \"insights_stale_warning_timestamp\": \"2023-04-29T00:50:11.397909+00:00\", \"insights_subscription_manager_id\": \"ae2597f7-bb89-49a8-81ed-7a2f411ac7c5\", \"insights_updated\": \"2023-04-20T01:45:16.305014+00:00\"}",
                              "inventory": {
                                   "organization": {
                                        "name": "Default",
                                        "type": "organization"
                                   },
                                   "name": "Home Inventory",
                                   "type": "inventory"
                              },
                              "related": {
                                   "groups": []
                              },
                              "natural_key": {
                                   "name": "rhel9",
                                   "inventory": {
                                        "organization": {
                                             "name": "Default",
                                             "type": "organization"
                                        },
                                        "name": "Home Inventory",
                                        "type": "inventory"
                                   },
                                   "type": "host"
                              }
                         }
                    ],
                    "groups": [],
                    "labels": []
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Inventory",
                    "type": "inventory"
               }
          }
     ],
     "inventory_sources": [
          {
               "name": "AWS",
               "description": "",
               "source": "ec2",
               "source_path": "",
               "source_vars": "",
               "enabled_var": "",
               "enabled_value": "",
               "host_filter": "",
               "overwrite": false,
               "overwrite_vars": false,
               "timeout": 0,
               "verbosity": 1,
               "execution_environment": null,
               "update_on_launch": false,
               "update_cache_timeout": 0,
               "source_project": null,
               "credential": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "credential_type": {
                         "name": "Amazon Web Services",
                         "kind": "cloud",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "related": {
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "name": "AWS",
                    "inventory": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "AWS Open Environment",
                         "type": "inventory"
                    },
                    "type": "inventory_source"
               }
          },
          {
               "name": "Insights Source",
               "description": "",
               "source": "insights",
               "source_path": "",
               "source_vars": "",
               "enabled_var": "",
               "enabled_value": "",
               "host_filter": "",
               "overwrite": false,
               "overwrite_vars": false,
               "timeout": 0,
               "verbosity": 1,
               "execution_environment": null,
               "update_on_launch": true,
               "update_cache_timeout": 0,
               "source_project": null,
               "credential": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Insights",
                    "credential_type": {
                         "name": "Insights",
                         "kind": "insights",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Inventory",
                    "type": "inventory"
               },
               "related": {
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": []
               },
               "natural_key": {
                    "name": "Insights Source",
                    "inventory": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Home Inventory",
                         "type": "inventory"
                    },
                    "type": "inventory_source"
               }
          }
     ],
     "job_templates": [
          {
               "name": "AMI Permissions",
               "description": "",
               "job_type": "run",
               "playbook": "amipermissions.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": false,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": false,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Default execution environment",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Personal Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "Open Environment Account ID",
                                   "question_description": "",
                                   "required": true,
                                   "type": "text",
                                   "variable": "user_ids",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "['123456789012']",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AMI Permissions",
                    "type": "job_template"
               }
          },
          {
               "name": "Apply Linux update",
               "description": "Update all Linux hosts",
               "job_type": "run",
               "playbook": "nixupdate.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": false,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": false,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": false,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Inventory",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Default execution environment",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Linux",
                              "credential_type": {
                                   "name": "Machine",
                                   "kind": "ssh",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {}
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Apply Linux update",
                    "type": "job_template"
               }
          },
          {
               "name": "AWS Provisioner",
               "description": "AWS Open Environment Provisioner",
               "job_type": "run",
               "playbook": "provisioner/provision_lab.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"autolicense\": true, \"controller_install_command\": \"./setup.sh -e gpgcheck=0\", \"create_login_page\": true, \"ec2_xtra\": {\"centos78\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.8*x86_64\", \"os_type\": \"linux\", \"owners\": 723450883993, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"centos79\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.9*x86_64\", \"os_type\": \"linux\", \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"private_automation_hub\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"rhel68\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-6.8_HVM_GA*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel7\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-7.9_HVM*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel8\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"t3.micro\", \"username\": \"ec2-user\"}, \"rhel8-tower\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"satellite\": {\"architecture\": \"x86_64\", \"disk_iops\": 4000, \"disk_space\": 500, \"disk_throughput\": 375, \"disk_volume_type\": \"gp3\", \"filter\": \"Satellite 6.10*\", \"os_type\": \"linux\", \"owners\": 723450883993, \"size\": \"r5a.xlarge\", \"username\": \"ec2-user\"}}, \"ee_default_image\": \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"ee_images\": [\"{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest\"], \"ee_registry_name\": \"registry.redhat.io\", \"ibm_community_grid\": false, \"tower_node_aws_api_access\": true}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": true,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ansible Workshops",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Base64 Manifest",
                              "credential_type": {
                                   "name": "Base64 Manifest",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Credential",
                              "credential_type": {
                                   "name": "Red Hat Credential",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Offline Token",
                              "credential_type": {
                                   "name": "Red Hat Offline Token",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the nodes will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all the VMs (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Student total",
                                   "question_description": "Creates student_total of workbenches for the workshop",
                                   "required": true,
                                   "type": "integer",
                                   "variable": "student_total",
                                   "min": 1,
                                   "max": 15,
                                   "default": 1,
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop type",
                                   "question_description": "Set the right workshop type (like network, rhel or f5)",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "workshop_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "network",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "rhel_90",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "security",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "smart_mgmt",
                                             "isDefault": true,
                                             "id": 4
                                        },
                                        {
                                             "choice": "windows",
                                             "isDefault": false,
                                             "id": 5
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "smart_mgmt",
                                   "choices": "network\\nrhel\\nrhel_90\\nsecurity\\nsmart_mgmt\\nwindows"
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for control nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Admin password",
                                   "question_description": "Password for Ansible control node",
                                   "required": true,
                                   "type": "password",
                                   "variable": "admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop DNS zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Deploy Automation Hub",
                                   "question_description": "Deploy a Private Automation Hub",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "automation_hub",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Automation Hub password",
                                   "question_description": "Private Automation Hub password",
                                   "required": false,
                                   "type": "password",
                                   "variable": "automationhub_admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Install VSCode Server",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "code_server",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "XRDP",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "xrdp",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Controller Install",
                                   "question_description": "Automatically installs Tower to control node",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "controllerinstall",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Developer mode",
                                   "question_description": "Forces ansible.workshops collection to install latest edits every time",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "developer_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Workshop or playground",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "provision_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "workshop",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "playground",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "workshop",
                                   "choices": "workshop\\nplayground"
                              },
                              {
                                   "question_name": "RHEL7 or RHEL8 (required for smart_mgmt)",
                                   "question_description": "Select rhel7 or rhel8 client nodes",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "rhel",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "rhel7",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel8",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "rhel7\\nrhel8"
                              },
                              {
                                   "question_name": "CentOS7 Nodes (required for smart_mgmt)",
                                   "question_description": "Choice of centos7 nodes refer to https://wiki.centos.org/Cloud/AWS for available minor releases e.g. centos78",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "centos7",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "centos78",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "centos79",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "centos78\\ncentos79"
                              },
                              {
                                   "question_name": "Prebuild",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "pre_build",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Provisioner",
                    "type": "job_template"
               }
          },
          {
               "name": "AWS Resources",
               "description": "Provision all resources EXCEPT for EC2 instances",
               "job_type": "run",
               "playbook": "ec2_resources.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"ec2_az\": \"{{ec2_region}}a\", \"ec2_network_vpc2\": \"172.18.0.0/16\", \"ec2_subnet\": \"172.16.0.0/16\", \"ec2_subnet2\": \"172.17.0.0/16\", \"ec2_wait\": true, \"ssh_port\": 22}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": false,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the resources will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all resources (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop DNS zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Resources",
                    "type": "job_template"
               }
          },
          {
               "name": "AWS Teardown",
               "description": "Teardown AWS Open Environment",
               "job_type": "run",
               "playbook": "provisioner/teardown_lab.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"autolicense\": true, \"controller_install_command\": \"./setup.sh -e gpgcheck=0\", \"create_login_page\": true, \"ec2_xtra\": {\"centos78\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.8*x86_64\", \"os_type\": \"linux\", \"owners\": 723450883993, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"centos79\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.9*x86_64\", \"os_type\": \"linux\", \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"private_automation_hub\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"rhel68\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-6.8_HVM_GA*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel7\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-7.9_HVM*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel8\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"t3.micro\", \"username\": \"ec2-user\"}, \"rhel8-tower\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"satellite\": {\"architecture\": \"x86_64\", \"disk_iops\": 4000, \"disk_space\": 500, \"disk_throughput\": 375, \"disk_volume_type\": \"gp3\", \"filter\": \"Satellite 6.10*\", \"os_type\": \"linux\", \"owners\": 723450883993, \"size\": \"r5a.xlarge\", \"username\": \"ec2-user\"}}, \"ee_default_image\": \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"ee_images\": [\"{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest\"], \"ee_registry_name\": \"registry.redhat.io\", \"ibm_community_grid\": false, \"tower_node_aws_api_access\": true}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": true,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ansible Workshops",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Base64 Manifest",
                              "credential_type": {
                                   "name": "Base64 Manifest",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Credential",
                              "credential_type": {
                                   "name": "Red Hat Credential",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Offline Token",
                              "credential_type": {
                                   "name": "Red Hat Offline Token",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the nodes will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all the VMs (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Student total",
                                   "question_description": "Creates student_total of workbenches for the workshop",
                                   "required": true,
                                   "type": "integer",
                                   "variable": "student_total",
                                   "min": 1,
                                   "max": 15,
                                   "default": 1,
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop type",
                                   "question_description": "Set the right workshop type (like network, rhel or f5)",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "workshop_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "network",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "security",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "windows",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "rhel_90",
                                             "isDefault": false,
                                             "id": 4
                                        },
                                        {
                                             "choice": "smart_mgmt",
                                             "isDefault": true,
                                             "id": 5
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "smart_mgmt",
                                   "choices": "network\\nrhel\\nsecurity\\nwindows\\nrhel_90\\nsmart_mgmt"
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for control nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Admin password",
                                   "question_description": "Password for Ansible control node",
                                   "required": true,
                                   "type": "password",
                                   "variable": "admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Route53 DNS Zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Deploy Automation Hub",
                                   "question_description": "Deploy a Private Automation Hub",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "automation_hub",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Automation Hub password",
                                   "question_description": "Private Automation Hub password",
                                   "required": false,
                                   "type": "password",
                                   "variable": "automationhub_admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Install VSCode Server",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "code_server",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "true",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "XRDP",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "xrdp",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Controller Install",
                                   "question_description": "Automatically installs Tower to control node",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "controllerinstall",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "true",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Developer mode",
                                   "question_description": "Forces ansible.workshops collection to install latest edits every time",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "developer_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "true",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop or playground",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "provision_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "workshop",
                                   "choices": "workshop\\nplayground",
                                   "new_question": true
                              },
                              {
                                   "question_name": "RHEL7 or RHEL8 (required for smart_mgmt)",
                                   "question_description": "Select rhel7 or rhel8 client nodes",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "rhel",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "rhel7\\nrhel8",
                                   "new_question": true
                              },
                              {
                                   "question_name": "CentOS7 Nodes (required for smart_mgmt)",
                                   "question_description": "Choice of centos7 nodes refer to https://wiki.centos.org/Cloud/AWS for available minor releases e.g. centos78",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "centos7",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "centos78\\ncentos79",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Prebuild",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "pre_build",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Teardown",
                    "type": "job_template"
               }
          },
          {
               "name": "Check Linux Updates",
               "description": "",
               "job_type": "run",
               "playbook": "checknixupdate.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": false,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": false,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": false,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Inventory",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Default execution environment",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Linux",
                              "credential_type": {
                                   "name": "Machine",
                                   "kind": "ssh",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {}
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Check Linux Updates",
                    "type": "job_template"
               }
          },
          {
               "name": "Demo Job Template",
               "description": "",
               "job_type": "run",
               "playbook": "hello_world.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "execution_environment": null,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": false,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": false,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": false,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Demo Inventory",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Demo Project",
                    "type": "project"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": null,
                              "name": "Demo Credential",
                              "credential_type": {
                                   "name": "Machine",
                                   "kind": "ssh",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {}
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Demo Job Template",
                    "type": "job_template"
               }
          },
          {
               "name": "Ping",
               "description": "",
               "job_type": "run",
               "playbook": "ping-test.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": false,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": false,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": false,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Inventory",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Default execution environment",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Linux",
                              "credential_type": {
                                   "name": "Machine",
                                   "kind": "ssh",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {}
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ping",
                    "type": "job_template"
               }
          },
          {
               "name": "Pub AWS Provisioner",
               "description": "AWS Open Environment Provisioner",
               "job_type": "run",
               "playbook": "provisioner/provision_lab.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"autolicense\": true, \"controller_install_command\": \"./setup.sh -e gpgcheck=0\", \"create_login_page\": true, \"ec2_xtra\": {\"centos78\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.8*x86_64\", \"os_type\": \"linux\", \"owners\": 723450883993, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"centos79\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.9*x86_64\", \"os_type\": \"linux\", \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"private_automation_hub\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"rhel68\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-6.8_HVM_GA*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel7\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-7.9_HVM*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel8\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"t3.micro\", \"username\": \"ec2-user\"}, \"rhel8-tower\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"satellite\": {\"architecture\": \"x86_64\", \"disk_iops\": 4000, \"disk_space\": 500, \"disk_throughput\": 375, \"disk_volume_type\": \"gp3\", \"filter\": \"Satellite 6.11*\", \"os_type\": \"linux\", \"owners\": 723450883993, \"size\": \"r5a.xlarge\", \"username\": \"ec2-user\"}}, \"ee_default_image\": \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"ee_images\": [\"{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest\"], \"ee_registry_name\": \"registry.redhat.io\", \"ibm_community_grid\": false, \"tower_node_aws_api_access\": true}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": true,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Public Ansible Workshops",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Personal Offline Token",
                              "credential_type": {
                                   "name": "Red Hat Offline Token",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Personal Red Hat Credentials",
                              "credential_type": {
                                   "name": "Red Hat Credential",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the nodes will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all the VMs (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Student total",
                                   "question_description": "Creates student_total of workbenches for the workshop",
                                   "required": true,
                                   "type": "integer",
                                   "variable": "student_total",
                                   "min": 1,
                                   "max": 15,
                                   "default": 1,
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop type",
                                   "question_description": "Set the right workshop type (like network, rhel or f5)",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "workshop_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "network",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "security",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "windows",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "rhel_90",
                                             "isDefault": false,
                                             "id": 4
                                        },
                                        {
                                             "choice": "smart_mgmt",
                                             "isDefault": true,
                                             "id": 5
                                        },
                                        {
                                             "choice": "demo",
                                             "isDefault": false,
                                             "id": 6
                                        },
                                        {
                                             "choice": "devops",
                                             "isDefault": false,
                                             "id": 7
                                        },
                                        {
                                             "choice": "f5 don't use",
                                             "isDefault": false,
                                             "id": 8
                                        },
                                        {
                                             "choice": "middleware",
                                             "isDefault": false,
                                             "id": 9
                                        },
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 10
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "smart_mgmt",
                                   "choices": "network\nrhel\nsecurity\nwindows\nrhel_90\nsmart_mgmt\ndemo\ndevops\nf5 don't use\nmiddleware"
                              },
                              {
                                   "question_name": "Workshop, playground, or demo",
                                   "question_description": "",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "provision_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "workshop",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "playground",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "demo",
                                             "isDefault": false,
                                             "id": 2
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "workshop",
                                   "choices": "workshop\\nplayground\\ndemo"
                              },
                              {
                                   "question_name": "if provision_mode is set to demo select which demos (WIP)",
                                   "question_description": "Let's you skip a lot of the pre-work in workshops so you can demo the product faster",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "demo",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "all",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "aws_provision_vm",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "azure_mysql_server",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "azure_provision_vm",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "chocolatey_app_install",
                                             "isDefault": false,
                                             "id": 4
                                        },
                                        {
                                             "choice": "chocolatey_config",
                                             "isDefault": false,
                                             "id": 5
                                        },
                                        {
                                             "choice": "chocolatey_features",
                                             "isDefault": false,
                                             "id": 6
                                        },
                                        {
                                             "choice": "deploy_application",
                                             "isDefault": false,
                                             "id": 7
                                        },
                                        {
                                             "choice": "fact_scan",
                                             "isDefault": false,
                                             "id": 8
                                        },
                                        {
                                             "choice": "debug_info",
                                             "isDefault": false,
                                             "id": 9
                                        },
                                        {
                                             "choice": "grant_sudo",
                                             "isDefault": false,
                                             "id": 10
                                        },
                                        {
                                             "choice": "patching",
                                             "isDefault": false,
                                             "id": 11
                                        },
                                        {
                                             "choice": "insights",
                                             "isDefault": false,
                                             "id": 12
                                        },
                                        {
                                             "choice": "turn_off_community_grid",
                                             "isDefault": false,
                                             "id": 13
                                        },
                                        {
                                             "choice": "windows_regedit_legal_notice",
                                             "isDefault": false,
                                             "id": 14
                                        },
                                        {
                                             "choice": "windows_iis",
                                             "isDefault": false,
                                             "id": 15
                                        },
                                        {
                                             "choice": "configlet_logging",
                                             "isDefault": false,
                                             "id": 16
                                        },
                                        {
                                             "choice": "configlet_ntp",
                                             "isDefault": false,
                                             "id": 17
                                        },
                                        {
                                             "choice": "configlet_vtyacl",
                                             "isDefault": false,
                                             "id": 18
                                        },
                                        {
                                             "choice": "f5_bigip_workflow",
                                             "isDefault": false,
                                             "id": 19
                                        },
                                        {
                                             "choice": "openscap",
                                             "isDefault": false,
                                             "id": 20
                                        },
                                        {
                                             "choice": "hardening",
                                             "isDefault": false,
                                             "id": 21
                                        },
                                        {
                                             "choice": "developer_report",
                                             "isDefault": false,
                                             "id": 22
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "all\\naws_provision_vm\\nazure_mysql_server\\nazure_provision_vm\\nchocolatey_app_install\\nchocolatey_config\\nchocolatey_features\\ndeploy_application\\nfact_scan\\ndebug_info\\ngrant_sudo\\npatching\\ninsights\\nturn_off_community_grid\\nwindows_regedit_legal_notice\\nwindows_iis\\nconfiglet_logging\\nconfiglet_ntp\\nconfiglet_vtyacl\\nf5_bigip_workflow\\nopenscap\\nhardening\\ndeveloper_report"
                              },
                              {
                                   "question_name": "If network workshop (remember to subscribe in marketplace)",
                                   "question_description": "If you chose workshop type 'network'",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "network_type",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "multivendor\\narista\\ncisco\\njuniper",
                                   "new_question": true
                              },
                              {
                                   "question_name": "If security workshop (remember to subscribe in marketplace)",
                                   "question_description": "",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "security_console",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "qradar",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "splunk",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "qradar\\nsplunk"
                              },
                              {
                                   "question_name": "Security workshop Windows password",
                                   "question_description": "",
                                   "required": false,
                                   "type": "password",
                                   "variable": "windows_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "if Windows provision extra instance",
                                   "question_description": "creates 2 windows instances per student instead of default 1",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "doubleup",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for control nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Admin password",
                                   "question_description": "Password for Ansible control node",
                                   "required": true,
                                   "type": "password",
                                   "variable": "admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Route53 DNS Zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Deploy Automation Hub",
                                   "question_description": "Deploy a Private Automation Hub",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "automation_hub",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Automation Hub password",
                                   "question_description": "Private Automation Hub password",
                                   "required": false,
                                   "type": "password",
                                   "variable": "automationhub_admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Install VSCode Server",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "code_server",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "XRDP",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "xrdp",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Controller Install",
                                   "question_description": "Automatically installs Tower to control node",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "controllerinstall",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Create control node cluster",
                                   "question_description": "Create control node cluster",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "create_cluster",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Developer mode",
                                   "question_description": "Forces ansible.workshops collection to install latest edits every time",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "developer_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "RHEL7 or RHEL8 (required for smart_mgmt)",
                                   "question_description": "Select rhel7 or rhel8 client nodes",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "rhel",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "rhel7",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel8",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "rhel7\\nrhel8"
                              },
                              {
                                   "question_name": "CentOS7 Nodes (required for smart_mgmt)",
                                   "question_description": "Choice of centos7 nodes refer to https://wiki.centos.org/Cloud/AWS for available minor releases e.g. centos78",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "centos7",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "centos78",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "centos79",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "centos78\\ncentos79"
                              },
                              {
                                   "question_name": "Prebuild",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "pre_build",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Manifest Download URL",
                                   "question_description": "",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "manifest_download_url",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "https://api.access.redhat.com/management/v1/allocations/",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Manifest UUID",
                                   "question_description": "",
                                   "required": false,
                                   "type": "text",
                                   "variable": "manifest_uuid",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Pub AWS Provisioner",
                    "type": "job_template"
               }
          },
          {
               "name": "Pub AWS Provisioner survey testing",
               "description": "AWS Open Environment Provisioner",
               "job_type": "run",
               "playbook": "provisioner/provision_lab.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"autolicense\": true, \"controller_install_command\": \"./setup.sh -e gpgcheck=0\", \"create_login_page\": true, \"ec2_xtra\": {\"centos78\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.8*x86_64\", \"os_type\": \"linux\", \"owners\": 723450883993, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"centos79\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.9*x86_64\", \"os_type\": \"linux\", \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"private_automation_hub\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"rhel68\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-6.8_HVM_GA*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel7\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-7.9_HVM*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel8\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"t3.micro\", \"username\": \"ec2-user\"}, \"rhel8-tower\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"satellite\": {\"architecture\": \"x86_64\", \"disk_iops\": 4000, \"disk_space\": 500, \"disk_throughput\": 375, \"disk_volume_type\": \"gp3\", \"filter\": \"Satellite 6.10*\", \"os_type\": \"linux\", \"owners\": 723450883993, \"size\": \"r5a.xlarge\", \"username\": \"ec2-user\"}}, \"ee_default_image\": \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"ee_images\": [\"{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest\"], \"ee_registry_name\": \"registry.redhat.io\", \"ibm_community_grid\": false, \"tower_node_aws_api_access\": true}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": true,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Public Ansible Workshops",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Base64 Manifest",
                              "credential_type": {
                                   "name": "Base64 Manifest",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Credential",
                              "credential_type": {
                                   "name": "Red Hat Credential",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Offline Token",
                              "credential_type": {
                                   "name": "Red Hat Offline Token",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the nodes will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all the VMs (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Student total",
                                   "question_description": "Creates student_total of workbenches for the workshop",
                                   "required": true,
                                   "type": "integer",
                                   "variable": "student_total",
                                   "min": 1,
                                   "max": 15,
                                   "default": 1,
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Provisioning mode",
                                   "question_description": "",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "provision_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "workshop",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "demo",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "workshop",
                                   "choices": "workshop\\ndemo"
                              },
                              {
                                   "question_name": "Workshop type",
                                   "question_description": "Set the right workshop type (like network, rhel or f5)",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "workshop_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "network",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "security",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "windows",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "rhel_90",
                                             "isDefault": false,
                                             "id": 4
                                        },
                                        {
                                             "choice": "smart_mgmt",
                                             "isDefault": true,
                                             "id": 5
                                        },
                                        {
                                             "choice": "devops",
                                             "isDefault": false,
                                             "id": 6
                                        },
                                        {
                                             "choice": "middleware",
                                             "isDefault": false,
                                             "id": 7
                                        },
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 8
                                        },
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 9
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "smart_mgmt",
                                   "choices": "network\\nrhel\\nsecurity\\nwindows\\nrhel_90\\nsmart_mgmt\\ndevops\\nmiddleware"
                              },
                              {
                                   "question_name": "If network workshop (remember to subscribe in marketplace)",
                                   "question_description": "If you chose workshop type 'network'",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "network_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "multivendor",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "arista",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "cisco",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "juniper",
                                             "isDefault": false,
                                             "id": 3
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "multivendor\\narista\\ncisco\\njuniper"
                              },
                              {
                                   "question_name": "If security workshop (remember to subscribe in marketplace)",
                                   "question_description": "",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "security_console",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "qradar",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "splunk",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "qradar\\nsplunk"
                              },
                              {
                                   "question_name": "Security workshop Windows password",
                                   "question_description": "",
                                   "required": false,
                                   "type": "password",
                                   "variable": "windows_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "if Windows provision extra instance",
                                   "question_description": "creates 2 windows instances per student instead of default 1",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "doubleup",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for control nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Admin password",
                                   "question_description": "Password for Ansible control node",
                                   "required": true,
                                   "type": "password",
                                   "variable": "admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop DNS zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Deploy Automation Hub",
                                   "question_description": "Deploy a Private Automation Hub",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "automation_hub",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Automation Hub password",
                                   "question_description": "Private Automation Hub password",
                                   "required": false,
                                   "type": "password",
                                   "variable": "automationhub_admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Install VSCode Server",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "code_server",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "XRDP",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "xrdp",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Controller Install",
                                   "question_description": "Automatically installs Tower to control node",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "controllerinstall",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Developer mode",
                                   "question_description": "Forces ansible.workshops collection to install latest edits every time",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "developer_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": true,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "true",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "RHEL7 or RHEL8 (required for smart_mgmt)",
                                   "question_description": "Select rhel7 or rhel8 client nodes",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "rhel",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "rhel7",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel8",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "rhel7\\nrhel8"
                              },
                              {
                                   "question_name": "CentOS7 Nodes (required for smart_mgmt)",
                                   "question_description": "Choice of centos7 nodes refer to https://wiki.centos.org/Cloud/AWS for available minor releases e.g. centos78",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "centos7",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "centos78",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "centos79",
                                             "isDefault": false,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "",
                                   "choices": "centos78\\ncentos79"
                              },
                              {
                                   "question_name": "Prebuild",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "pre_build",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Pub AWS Provisioner survey testing",
                    "type": "job_template"
               }
          },
          {
               "name": "Pub AWS Teardown",
               "description": "Teardown AWS Open Environment",
               "job_type": "run",
               "playbook": "provisioner/teardown_lab.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"autolicense\": true, \"controller_install_command\": \"./setup.sh -e gpgcheck=0\", \"create_login_page\": true, \"ec2_xtra\": {\"centos78\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.8*x86_64\", \"os_type\": \"linux\", \"owners\": 723450883993, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"centos79\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.9*x86_64\", \"os_type\": \"linux\", \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"private_automation_hub\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"rhel68\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-6.8_HVM_GA*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel7\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-7.9_HVM*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel8\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"t3.micro\", \"username\": \"ec2-user\"}, \"rhel8-tower\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"satellite\": {\"architecture\": \"x86_64\", \"disk_iops\": 4000, \"disk_space\": 500, \"disk_throughput\": 375, \"disk_volume_type\": \"gp3\", \"filter\": \"Satellite 6.10*\", \"os_type\": \"linux\", \"owners\": 723450883993, \"size\": \"r5a.xlarge\", \"username\": \"ec2-user\"}}, \"ee_default_image\": \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"ee_images\": [\"{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest\"], \"ee_registry_name\": \"registry.redhat.io\", \"ibm_community_grid\": false, \"tower_node_aws_api_access\": true}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": true,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Public Ansible Workshops",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Personal Offline Token",
                              "credential_type": {
                                   "name": "Red Hat Offline Token",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Personal Red Hat Credentials",
                              "credential_type": {
                                   "name": "Red Hat Credential",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the nodes will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all the VMs (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Student total",
                                   "question_description": "Creates student_total of workbenches for the workshop",
                                   "required": true,
                                   "type": "integer",
                                   "variable": "student_total",
                                   "min": 1,
                                   "max": 15,
                                   "default": 1,
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop type",
                                   "question_description": "Set the right workshop type (like network, rhel or f5)",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "workshop_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "network",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "security",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "windows",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "rhel_90",
                                             "isDefault": false,
                                             "id": 4
                                        },
                                        {
                                             "choice": "smart_mgmt",
                                             "isDefault": true,
                                             "id": 5
                                        },
                                        {
                                             "choice": "demo",
                                             "isDefault": false,
                                             "id": 6
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "smart_mgmt",
                                   "choices": "network\\nrhel\\nsecurity\\nwindows\\nrhel_90\\nsmart_mgmt\\ndemo"
                              },
                              {
                                   "question_name": "If network workshop (remember to subscribe in marketplace)",
                                   "question_description": "If you chose workshop type 'network'",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "network_type",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "multivendor\\narista\\ncisco\\njuniper",
                                   "new_question": true
                              },
                              {
                                   "question_name": "If security workshop (remember to subscribe in marketplace)",
                                   "question_description": "",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "security_console",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "qradar\\nsplunk",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Windows password for security workshop",
                                   "question_description": "",
                                   "required": false,
                                   "type": "password",
                                   "variable": "windows_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for control nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Admin password",
                                   "question_description": "Password for Ansible control node",
                                   "required": true,
                                   "type": "password",
                                   "variable": "admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop DNS zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Deploy Automation Hub",
                                   "question_description": "Deploy a Private Automation Hub",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "automation_hub",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Automation Hub password",
                                   "question_description": "Private Automation Hub password",
                                   "required": false,
                                   "type": "password",
                                   "variable": "automationhub_admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Install VSCode Server",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "code_server",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "true",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "XRDP",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "xrdp",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Controller Install",
                                   "question_description": "Automatically installs Tower to control node",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "controllerinstall",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "true",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Developer mode",
                                   "question_description": "Forces ansible.workshops collection to install latest edits every time",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "developer_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "true",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop or playground",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "provision_mode",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "workshop",
                                   "choices": "workshop\\nplayground",
                                   "new_question": true
                              },
                              {
                                   "question_name": "RHEL7 or RHEL8 (required for smart_mgmt)",
                                   "question_description": "Select rhel7 or rhel8 client nodes",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "rhel",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "rhel7\\nrhel8",
                                   "new_question": true
                              },
                              {
                                   "question_name": "CentOS7 Nodes (required for smart_mgmt)",
                                   "question_description": "Choice of centos7 nodes refer to https://wiki.centos.org/Cloud/AWS for available minor releases e.g. centos78",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "centos7",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "centos78\\ncentos79",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Prebuild",
                                   "question_description": "",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "pre_build",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "false",
                                   "choices": "true\\nfalse",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Manifest URL (See description)",
                                   "question_description": "https://api.access.redhat.com/management/v1/allocations/<manifest uuid>",
                                   "required": false,
                                   "type": "text",
                                   "variable": "manifest_download_url",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Pub AWS Teardown",
                    "type": "job_template"
               }
          },
          {
               "name": "Pub AWS Teardown survey testing",
               "description": "Teardown AWS Open Environment",
               "job_type": "run",
               "playbook": "provisioner/teardown_lab.yml",
               "scm_branch": "",
               "forks": 0,
               "limit": "",
               "verbosity": 0,
               "extra_vars": "{\"autolicense\": true, \"controller_install_command\": \"./setup.sh -e gpgcheck=0\", \"create_login_page\": true, \"ec2_xtra\": {\"centos78\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.8*x86_64\", \"os_type\": \"linux\", \"owners\": 723450883993, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"centos79\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"CentOS*7.9*x86_64\", \"os_type\": \"linux\", \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"centos\"}, \"private_automation_hub\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"rhel68\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-6.8_HVM_GA*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel7\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-7.9_HVM*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"python_interpreter\": \"/usr/bin/python\", \"size\": \"t2.medium\", \"username\": \"ec2-user\"}, \"rhel8\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 10, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"t3.micro\", \"username\": \"ec2-user\"}, \"rhel8-tower\": {\"architecture\": \"x86_64\", \"disk_iops\": 3000, \"disk_space\": 40, \"disk_throughput\": 125, \"disk_volume_type\": \"gp3\", \"filter\": \"RHEL-8*HVM-*Hourly*\", \"os_type\": \"linux\", \"owners\": 309956199498, \"size\": \"m4.xlarge\", \"username\": \"ec2-user\"}, \"satellite\": {\"architecture\": \"x86_64\", \"disk_iops\": 4000, \"disk_space\": 500, \"disk_throughput\": 375, \"disk_volume_type\": \"gp3\", \"filter\": \"Satellite 6.10*\", \"os_type\": \"linux\", \"owners\": 723450883993, \"size\": \"r5a.xlarge\", \"username\": \"ec2-user\"}}, \"ee_default_image\": \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"ee_images\": [\"{{ ee_registry_name }}/ansible-automation-platform-23/ee-29-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-supported-rhel8:latest\", \"{{ ee_registry_name }}/ansible-automation-platform-23/ee-minimal-rhel8:latest\"], \"ee_registry_name\": \"registry.redhat.io\", \"ibm_community_grid\": false, \"tower_node_aws_api_access\": true}",
               "job_tags": "",
               "force_handlers": false,
               "skip_tags": "",
               "start_at_task": "",
               "timeout": 0,
               "use_fact_cache": false,
               "host_config_key": "",
               "ask_scm_branch_on_launch": false,
               "ask_diff_mode_on_launch": false,
               "ask_variables_on_launch": true,
               "ask_limit_on_launch": false,
               "ask_tags_on_launch": false,
               "ask_skip_tags_on_launch": false,
               "ask_job_type_on_launch": false,
               "ask_verbosity_on_launch": true,
               "ask_inventory_on_launch": false,
               "ask_credential_on_launch": false,
               "ask_execution_environment_on_launch": false,
               "ask_labels_on_launch": false,
               "ask_forks_on_launch": false,
               "ask_job_slice_count_on_launch": false,
               "ask_timeout_on_launch": false,
               "ask_instance_groups_on_launch": false,
               "survey_enabled": true,
               "become_enabled": false,
               "diff_mode": false,
               "allow_simultaneous": false,
               "job_slice_count": 1,
               "webhook_service": "",
               "webhook_credential": null,
               "prevent_instance_group_fallback": false,
               "inventory": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "AWS Open Environment",
                    "type": "inventory"
               },
               "project": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Public Ansible Workshops",
                    "type": "project"
               },
               "execution_environment": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               },
               "related": {
                    "labels": [],
                    "credentials": [
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "AWS Open Environment",
                              "credential_type": {
                                   "name": "Amazon Web Services",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Base64 Manifest",
                              "credential_type": {
                                   "name": "Base64 Manifest",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Credential",
                              "credential_type": {
                                   "name": "Red Hat Credential",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         },
                         {
                              "organization": {
                                   "name": "Default",
                                   "type": "organization"
                              },
                              "name": "Red Hat Offline Token",
                              "credential_type": {
                                   "name": "Red Hat Offline Token",
                                   "kind": "cloud",
                                   "type": "credential_type"
                              },
                              "type": "credential"
                         }
                    ],
                    "schedules": [],
                    "notification_templates_started": [],
                    "notification_templates_success": [],
                    "notification_templates_error": [],
                    "survey_spec": {
                         "name": "",
                         "description": "",
                         "spec": [
                              {
                                   "question_name": "EC2 Region",
                                   "question_description": "Region where the nodes will live",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "ec2_region",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "us-east-1",
                                   "choices": "us-east-1\\nus-east-2\\nus-west-1\\nus-west-2",
                                   "new_question": true
                              },
                              {
                                   "question_name": "EC2 Name Prefix",
                                   "question_description": "Name prefix for all the VMs (No uppercase, no underscores)",
                                   "required": true,
                                   "type": "text",
                                   "variable": "ec2_name_prefix",
                                   "min": 0,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Student total",
                                   "question_description": "Creates student_total of workbenches for the workshop",
                                   "required": true,
                                   "type": "integer",
                                   "variable": "student_total",
                                   "min": 1,
                                   "max": 15,
                                   "default": 1,
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Workshop type",
                                   "question_description": "Set the right workshop type (like network, rhel or f5)",
                                   "required": true,
                                   "type": "multiplechoice",
                                   "variable": "workshop_type",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "network",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "rhel",
                                             "isDefault": false,
                                             "id": 1
                                        },
                                        {
                                             "choice": "security",
                                             "isDefault": false,
                                             "id": 2
                                        },
                                        {
                                             "choice": "windows",
                                             "isDefault": false,
                                             "id": 3
                                        },
                                        {
                                             "choice": "rhel_90",
                                             "isDefault": false,
                                             "id": 4
                                        },
                                        {
                                             "choice": "smart_mgmt",
                                             "isDefault": true,
                                             "id": 5
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "smart_mgmt",
                                   "choices": "network\\nrhel\\nsecurity\\nwindows\\nrhel_90\\nsmart_mgmt"
                              },
                              {
                                   "question_name": "DNS Type",
                                   "question_description": "Turn DNS on for control nodes, and set to type in valid_dns_type",
                                   "required": true,
                                   "type": "text",
                                   "variable": "dns_type",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "aws",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Admin password",
                                   "question_description": "Password for Ansible control node",
                                   "required": true,
                                   "type": "password",
                                   "variable": "admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Windows password for security workshop",
                                   "question_description": "",
                                   "required": false,
                                   "type": "password",
                                   "variable": "windows_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              },
                              {
                                   "question_name": "Route53 DNS Zone",
                                   "question_description": "Sets the Route53 DNS zone to use for Amazon Web Services",
                                   "required": true,
                                   "type": "text",
                                   "variable": "workshop_dns_zone",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "formattedChoices": [
                                        {
                                             "choice": "",
                                             "isDefault": false,
                                             "id": 0
                                        }
                                   ],
                                   "new_question": false
                              },
                              {
                                   "question_name": "Deploy Automation Hub",
                                   "question_description": "Deploy a Private Automation Hub",
                                   "required": false,
                                   "type": "multiplechoice",
                                   "variable": "automation_hub",
                                   "min": 0,
                                   "max": 1024,
                                   "formattedChoices": [
                                        {
                                             "choice": "true",
                                             "isDefault": false,
                                             "id": 0
                                        },
                                        {
                                             "choice": "false",
                                             "isDefault": true,
                                             "id": 1
                                        }
                                   ],
                                   "new_question": false,
                                   "default": "false",
                                   "choices": "true\\nfalse"
                              },
                              {
                                   "question_name": "Automation Hub password",
                                   "question_description": "Private Automation Hub password",
                                   "required": false,
                                   "type": "password",
                                   "variable": "automationhub_admin_password",
                                   "min": 1,
                                   "max": 1024,
                                   "default": "",
                                   "choices": "",
                                   "new_question": true
                              }
                         ]
                    }
               },
               "natural_key": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Pub AWS Teardown survey testing",
                    "type": "job_template"
               }
          }
     ],
     "workflow_job_templates": [],
     "execution_environments": [
          {
               "name": "Minimal execution environment",
               "description": "",
               "organization": null,
               "image": "registry.redhat.io/ansible-automation-platform-23/ee-minimal-rhel8:latest",
               "credential": null,
               "pull": "missing",
               "natural_key": {
                    "name": "Minimal execution environment",
                    "type": "execution_environment"
               }
          },
          {
               "name": "Ansible Engine 2.9 execution environment",
               "description": "",
               "organization": null,
               "image": "registry.redhat.io/ansible-automation-platform-23/ee-29-rhel8:latest",
               "credential": null,
               "pull": "missing",
               "natural_key": {
                    "name": "Ansible Engine 2.9 execution environment",
                    "type": "execution_environment"
               }
          },
          {
               "name": "Default execution environment",
               "description": "",
               "organization": null,
               "image": "registry.redhat.io/ansible-automation-platform-23/ee-supported-rhel8:latest",
               "credential": null,
               "pull": "missing",
               "natural_key": {
                    "name": "Default execution environment",
                    "type": "execution_environment"
               }
          },
          {
               "name": "Quay Workshop EE",
               "description": "",
               "organization": null,
               "image": "quay.io/acme_corp/workshop_ee:latest",
               "credential": null,
               "pull": "missing",
               "natural_key": {
                    "name": "Quay Workshop EE",
                    "type": "execution_environment"
               }
          },
          {
               "name": "Automation Hub Default execution environment",
               "description": "",
               "organization": null,
               "image": "automationhub.hyperv.corvus.local/ee-supported-rhel8:latest",
               "pull": "",
               "credential": {
                    "organization": null,
                    "name": "Automation Hub Container Registry",
                    "credential_type": {
                         "name": "Container Registry",
                         "kind": "registry",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "natural_key": {
                    "name": "Automation Hub Default execution environment",
                    "type": "execution_environment"
               }
          },
          {
               "name": "Automation Hub Ansible Engine 2.9 execution environment",
               "description": "",
               "organization": null,
               "image": "automationhub.hyperv.corvus.local/ee-29-rhel8:latest",
               "pull": "",
               "credential": {
                    "organization": null,
                    "name": "Automation Hub Container Registry",
                    "credential_type": {
                         "name": "Container Registry",
                         "kind": "registry",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "natural_key": {
                    "name": "Automation Hub Ansible Engine 2.9 execution environment",
                    "type": "execution_environment"
               }
          },
          {
               "name": "Automation Hub Minimal execution environment",
               "description": "",
               "organization": null,
               "image": "automationhub.hyperv.corvus.local/ee-minimal-rhel8:latest",
               "pull": "",
               "credential": {
                    "organization": null,
                    "name": "Automation Hub Container Registry",
                    "credential_type": {
                         "name": "Container Registry",
                         "kind": "registry",
                         "type": "credential_type"
                    },
                    "type": "credential"
               },
               "natural_key": {
                    "name": "Automation Hub Minimal execution environment",
                    "type": "execution_environment"
               }
          }
     ],
     "applications": [],
     "schedules": [
          {
               "rrule": "DTSTART:20230425T200723Z RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=SU",
               "name": "Cleanup Job Schedule",
               "description": "Automatically Generated Schedule",
               "extra_data": {
                    "days": "120"
               },
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "name": "Cleanup Job Details",
                    "type": "system_job_template"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "name": "Cleanup Job Details",
                         "type": "system_job_template"
                    },
                    "name": "Cleanup Job Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART:20230425T200723Z RRULE:FREQ=WEEKLY;INTERVAL=1;BYDAY=TU",
               "name": "Cleanup Activity Schedule",
               "description": "Automatically Generated Schedule",
               "extra_data": {
                    "days": "355"
               },
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "name": "Cleanup Activity Stream",
                    "type": "system_job_template"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "name": "Cleanup Activity Stream",
                         "type": "system_job_template"
                    },
                    "name": "Cleanup Activity Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART:20230425T200832Z RRULE:FREQ=WEEKLY;INTERVAL=1",
               "name": "Cleanup Expired Sessions",
               "description": "Cleans out expired browser sessions",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "name": "Cleanup Expired Sessions",
                    "type": "system_job_template"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "name": "Cleanup Expired Sessions",
                         "type": "system_job_template"
                    },
                    "name": "Cleanup Expired Sessions",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART:20230425T200833Z RRULE:FREQ=WEEKLY;INTERVAL=1",
               "name": "Cleanup Expired OAuth 2 Tokens",
               "description": "Removes expired OAuth 2 access and refresh tokens",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "name": "Cleanup Expired OAuth 2 Tokens",
                    "type": "system_job_template"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "name": "Cleanup Expired OAuth 2 Tokens",
                         "type": "system_job_template"
                    },
                    "name": "Cleanup Expired OAuth 2 Tokens",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "Ansible Workshops Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Ansible Workshops",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Ansible Workshops",
                         "type": "project"
                    },
                    "name": "Ansible Workshops Sync Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "Configuration as Code Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Configuration as Code",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Configuration as Code",
                         "type": "project"
                    },
                    "name": "Configuration as Code Sync Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "Home Lab Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Home Lab",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Home Lab",
                         "type": "project"
                    },
                    "name": "Home Lab Sync Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "packer-ansible-ec2 Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "packer-ansible-ec2",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "packer-ansible-ec2",
                         "type": "project"
                    },
                    "name": "packer-ansible-ec2 Sync Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "Product Demos Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Product Demos",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Product Demos",
                         "type": "project"
                    },
                    "name": "Product Demos Sync Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "Public Ansible Workshops Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Public Ansible Workshops",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Public Ansible Workshops",
                         "type": "project"
                    },
                    "name": "Public Ansible Workshops Sync Schedule",
                    "type": "schedule"
               }
          },
          {
               "rrule": "DTSTART;TZID=America/Los_Angeles:20230427T220000 RRULE:INTERVAL=1;FREQ=DAILY",
               "name": "Red Hat Insights Project Sync Schedule",
               "description": "",
               "extra_data": {},
               "inventory": null,
               "scm_branch": null,
               "job_type": null,
               "job_tags": null,
               "skip_tags": null,
               "limit": null,
               "diff_mode": null,
               "verbosity": null,
               "execution_environment": null,
               "forks": null,
               "job_slice_count": null,
               "timeout": null,
               "enabled": true,
               "unified_job_template": {
                    "organization": {
                         "name": "Default",
                         "type": "organization"
                    },
                    "name": "Red Hat Insights Project",
                    "type": "project"
               },
               "related": {
                    "credentials": []
               },
               "natural_key": {
                    "unified_job_template": {
                         "organization": {
                              "name": "Default",
                              "type": "organization"
                         },
                         "name": "Red Hat Insights Project",
                         "type": "project"
                    },
                    "name": "Red Hat Insights Project Sync Schedule",
                    "type": "schedule"
               }
          }
     ]
}
